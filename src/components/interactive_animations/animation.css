:root {
  --fallingDur: 1500ms;
  --duration1: 1000ms;
  --duration3: 3000ms;
  --duration4: 4000ms;
  --duration5: 5000ms;
}

.fallingTag {
  transition: opacity var(--fallingDur) ease, transform var(--fallingDur) ease,
    visibility;
}

.startingFallingAnim {
  opacity: 0;
  transform: scale(1.5);
  visibility: hidden;
}

.RotateInTag {
  min-height: 30px;
}

.RotateInTag > * {
  transition: transform var(--duration1) ease;
}

.RotateOutAnim {
  transform: rotateX(-90deg);
}

.fadeInTag {
  transition: opacity var(--duration3) ease;
}

.fadeOut {
  opacity: 0;
}

.floatUpTag {
  transition: opacity var(--duration3) ease, transform var(--duration3);
}

.floatUp {
  transform: translateY(20px);
  opacity: 0;
}

.fadeInFromBottomTag {
  will-change: transform, opacity;
  transition: opacity var(--duration3) ease, transform var(--duration1) ease;
}

.fadeOutIntoBottom {
  will-change: transform, opacity;
  opacity: 0;
  transform: translateY(100px);
}

/* The parent div is tagged with the class name "childrenFadeInFromBottomTag". 
The children elements are then tagged with "fadeOutIntoBottom" class name. 
Add delay property for each children where the animation delay gets longer for each consecutive children
*/
.childrenFadeInFromBottomTag > * {
  transition: opacity var(--duration3) ease, transform var(--duration1) ease;
}

.rotateUpTag {
  will-change: transform, opacity;
  transition: opacity var(--duration3), transform var(--duration3);
}

.rotateDown {
  opacity: 0;
  transform: rotateX(90deg);
}
