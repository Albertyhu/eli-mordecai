---
export const prerender = true;
import BaseLayout from '@/layout/BaseLayout.astro'; 
import NavBar from "@/components/navigation/index.astro"; 
import BannerTitleSeparator from '@/components/graphics/banner-title-separator.astro';
import RenderPagination from '@/components/paginatedBlog/renderPostPagination.tsx';
import ImageDivder from "@/components/image-dividers/courthouse-corner.astro"
import { createStaticPathArray } from "../../hooks/blogHooks.ts"; 
import Searchbar from '@/components/search/index.astro';
import BlogPreview from '@/components/blogComponent/preview-panel.astro';
import type { 
    PostType, 
    PostAssetType } from '../../util/interface.tsx';

export async function getStaticPaths() : Promise<Array<any>> {
    const PAGE_SIZE : number = 6;
    var allPosts : Array<PostType> | [] = []; 
    var totalPages : number = 0
    try{
        allPosts = await Astro.glob("../posts/*.md")
        totalPages = Math.ceil(allPosts.length/PAGE_SIZE);
        console.log("totalPages: ", totalPages)
    } catch(error){
        allPosts = []
    }
    var assets : Array<PostAssetType> = []
    try{
        assets = await Astro.glob("../../assets/uploads/*"); 
    } catch (error){
        assets = []
    }
    return createStaticPathArray({
        allPosts, 
        PAGE_SIZE,
        totalPages, 
        assets, 
    })
}   
const {page} = Astro.params; 
const {
    totalPages,
    paginatedArray,
    totalPosts,
    PAGE_SIZE
    } = Astro.props;  
let inBound = page && typeof parseInt(page) === "number" && parseInt(page) <= totalPages; 
if(!inBound && totalPages != 0) {
    return Astro.redirect("/error")
}

---
<BaseLayout 
    pageTitle = "Blog"
    customDescription = "Lawyer Website"
>
    <div class="banner-title-area">
        <div class="banner-title-overlay"></div>
        <NavBar />
        <div class="container w-container">
            <div class="banner-title-wrap">
                <h1 class="banner-area-title">Recent Blogs</h1>
                <BannerTitleSeparator customStyle = "mx-auto" />
            </div>
        </div>
    </div>
    <!-- <div class="featured-blog-section">
        <div class="container w-container">
        <div class="featured-blog-wrap">
            <div class="w-dyn-list">
                <div role="list" class="w-dyn-items">
                    <div role="listitem" class="w-dyn-item">
                    <div class="featured-blog-item">
                        <div class="w-layout-grid featured-blog-grid">
                            <div id="w-node-ebe54f24-607b-a0cd-8c2d-18b9d8d83ea3-034100c3" class="featured-blog-image-wrap"><a href="/post/the-difference-between-information-legal-advice" class="w-inline-block"><img src="https://assets-global.website-files.com/61fd0d3090785d374bf9afc3/6200b3a20ca3da178244d159_blog-thumbnail-image-7.jpg" loading="lazy" alt="Featured Blog Image" sizes="(max-width: 479px) 87vw, (max-width: 767px) 90vw, (max-width: 991px) 92vw, (max-width: 1439px) 94vw, (max-width: 1919px) 1360px, 1400px" srcset="https://assets-global.website-files.com/61fd0d3090785d374bf9afc3/6200b3a20ca3da178244d159_blog-thumbnail-image-7-p-500.jpeg 500w, https://assets-global.website-files.com/61fd0d3090785d374bf9afc3/6200b3a20ca3da178244d159_blog-thumbnail-image-7-p-800.jpeg 800w, https://assets-global.website-files.com/61fd0d3090785d374bf9afc3/6200b3a20ca3da178244d159_blog-thumbnail-image-7-p-1080.jpeg 1080w, https://assets-global.website-files.com/61fd0d3090785d374bf9afc3/6200b3a20ca3da178244d159_blog-thumbnail-image-7.jpg 1200w"/></a></div>
                            <div id="w-node-f9ec0f2a-c53c-dd3c-83ef-b3f82d90d6d8-034100c3" class="featured-blog-content-wrap">
                                <div class="blog-meta-wrap">
                                <div class="law-type-wrap"><a href="/law-types/corporate-law" class="blog-law-type">Corporate Law</a></div>
                                <div class="meta-separator">
                                    <p class="meta-separator-line">|</p>
                                </div>
                                <div class="date-wrap">
                                    <p class="published-date">Friday, February 4, 2022</p>
                                </div>
                                </div>
                                <div class="blog-content-area">
                                <a href="/post/the-difference-between-information-legal-advice" class="featured-blog-title">The Difference between Information &amp; Legal Advice</a>
                                <p class="blog-excerpt">Collaborative on low-hanging fruit to identify a ballpark value added activity to beta matrix economically test override the digital.</p>
                                </div>
                                <div class="blog-viewmore-wrap"><a href="/post/the-difference-between-information-legal-advice" class="viewmore-link">View More</a></div>
                            </div>
                        </div>
                    </div>
                    </div>
                </div>
            </div>
        </div>
        </div>
    </div> 
    <div class="divider-section">
        <div class="container w-container">
        <div class="divider-line"></div>
        </div>
    </div>-->
    <Searchbar />
    <div class="blog-section">
        <div class="container w-container">
        <div class="blog-content-wrap">
            <div class="w-dyn-list">
                <div role="list" class="w-dyn-items w-row">
                <!-- Blog List  -->
                {totalPosts === 0 &&
                    <h2
                        class ="text-center text-2xl my-5"
                    >There are currently no blog posts published at the moment.</h2>
                }
                {totalPages > 1 &&
                    <RenderPagination 
                        pageSize = {PAGE_SIZE}
                        totalCount = {totalPosts as number}
                        currentPage = {parseInt(page)}
                        totalPages = {totalPages}
                        isMobile = {true}
                        client:load
                    />
                }
                {paginatedArray && paginatedArray.length > 0 && 
                    <div class = "">
                        {paginatedArray.map(async (post :PostType) =>{
                            return <BlogPreview 
                                {...post.frontmatter} 
                                url = {post.url}
                                />

                        })}
                    </div>
                }
                </div>
                {totalPages > 1 &&
                    <div class = "w-full h-auto">
                            <RenderPagination 
                                pageSize = {PAGE_SIZE}
                                totalCount = {totalPosts as number}
                                currentPage = {parseInt(page)}
                                totalPages = {totalPages}
                                isMobile = {false}
                                client:load
                            />
                    </div>
                }
            </div>
        </div>
        </div>
    </div>
    <ImageDivder />
</BaseLayout>